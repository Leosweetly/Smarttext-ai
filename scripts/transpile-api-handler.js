#!/usr/bin/env node

/**
 * This script transpiles the TypeScript API handler to JavaScript
 * so it can be imported directly by the test scripts.
 * 
 * Usage: node scripts/transpile-api-handler.js
 */

import { exec } from 'child_process';
import fs from 'fs';
import path from 'path';
import { fileURLToPath } from 'url';

// Get the directory name
const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);
const rootDir = path.resolve(__dirname, '..');

// Path to the TypeScript file
const tsFilePath = path.join(rootDir, 'pages', 'api', 'new-message.ts');
// Path to the output JavaScript file
const jsFilePath = path.join(rootDir, 'pages', 'api', 'new-message.js');

// Check if the TypeScript file exists
if (!fs.existsSync(tsFilePath)) {
  console.error(`Error: TypeScript file not found at ${tsFilePath}`);
  process.exit(1);
}

console.log(`Transpiling ${tsFilePath} to ${jsFilePath}...`);

// Use TypeScript compiler to transpile the file
const tscCommand = `npx tsc ${tsFilePath} --outDir ${path.dirname(jsFilePath)} --esModuleInterop --target ES2020 --module ESNext --moduleResolution node`;

exec(tscCommand, (error, stdout, stderr) => {
  if (error) {
    console.error(`Error transpiling file: ${error.message}`);
    console.error(stderr);
    process.exit(1);
  }
  
  console.log(`Successfully transpiled ${tsFilePath} to ${jsFilePath}`);
  
  // Add a note to the top of the file
  const jsContent = fs.readFileSync(jsFilePath, 'utf8');
  const noteContent = `// This file is auto-generated from ${path.basename(tsFilePath)} for testing purposes.\n// Do not edit this file directly.\n\n${jsContent}`;
  fs.writeFileSync(jsFilePath, noteContent);
  
  console.log('Added note to the top of the file.');
  console.log('Done!');
});
