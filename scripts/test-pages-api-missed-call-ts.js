#!/usr/bin/env node

/**
 * Baseline Test for pages/api/missed-call.ts
 * Generated by airtable-migration-audit.js
 * 
 * This test captures current behavior before migration
 */

import fetch from 'node-fetch';

const TEST_CONFIG = {
  baseUrl: process.env.VERCEL_URL || 'http://localhost:3000',
  endpoint: '/api/missed-call',
  testPhone: '+15551234567'
};

async function testCurrentBehavior() {
  console.log(`🧪 Testing current behavior of ${TEST_CONFIG.endpoint}`);
  
  try {
    // Test with valid phone number
    const response = await fetch(`${TEST_CONFIG.baseUrl}${TEST_CONFIG.endpoint}`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/x-www-form-urlencoded',
      },
      body: new URLSearchParams({
        To: TEST_CONFIG.testPhone,
        From: '+15559876543',
        CallSid: 'test-call-sid-' + Date.now()
      })
    });
    
    const responseText = await response.text();
    
    console.log(`📊 Response Status: ${response.status}`);
    console.log(`📊 Response Headers:`, Object.fromEntries(response.headers));
    console.log(`📊 Response Body: ${responseText.substring(0, 500)}...`);
    
    // Save snapshot
    const snapshot = {
      timestamp: new Date().toISOString(),
      endpoint: TEST_CONFIG.endpoint,
      request: {
        method: 'POST',
        headers: { 'Content-Type': 'application/x-www-form-urlencoded' },
        body: { To: TEST_CONFIG.testPhone, From: '+15559876543' }
      },
      response: {
        status: response.status,
        headers: Object.fromEntries(response.headers),
        body: responseText
      }
    };
    
    return snapshot;
    
  } catch (error) {
    console.error(`❌ Test failed:`, error);
    return {
      timestamp: new Date().toISOString(),
      endpoint: TEST_CONFIG.endpoint,
      error: error.message
    };
  }
}

// Run test if called directly
if (import.meta.url === `file://${process.argv[1]}`) {
  testCurrentBehavior()
    .then(result => {
      console.log(`✅ Test completed for ${TEST_CONFIG.endpoint}`);
      console.log(JSON.stringify(result, null, 2));
    })
    .catch(error => {
      console.error(`❌ Test suite failed:`, error);
      process.exit(1);
    });
}

export { testCurrentBehavior };
